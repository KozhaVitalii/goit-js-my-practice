/*
 * Array.prototype.reduce()
 * - –ü–æ—ç–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
 * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á—Ç–æ —É–≥–æ–¥–Ω–æ ü§Ø
 * - –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ —Å —É–º–æ–º
 */

// reduce —ç—Ç–æ —à–≤–µ—Ü–∞—Ä—Å–∫–∏–π –Ω–æ–∂ –≤ —Ä–∞–±–æ—Ç–µ —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏(–æ–±—ä–µ–∫—Ç–∞–º–∏)
// reduce –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∑—è—Ç—å –º–Ω–æ–≥–æ –∞ –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç—å —á—Ç–æ-—Ç–æ –æ–Ω–æ

// –í —Ñ—É–Ω–∫—Ü–∏–∏ reduce –µ—Å—Ç—å —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ "acc" - –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–∏(—Ç–æ—Ç–∞–ª, –∫–æ—Ç–æ—Ä—ã–π 
// –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—É–º–º—É (–º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–∞—á–∞–ª—å–Ω–æ 0, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ) –∏
// number - —ç–ª–µ–º–µ–Ω—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–π —Å—É–º–º–∏—Ä—É–µ—Ç—Å—è –≤ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏, –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
// —ç—Ç–æ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ "0" - —ç—Ç–æ –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞(–ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞), —Ç.–µ.–æ—Ç–ø—Ä–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞. –ö–∞–∫
// total = 0. –ù–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ —Ç–∞–∫, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ –º–∞—Å—Å–∏–≤ –∏ –æ–±—ä–µ–∫—Ç –∏ –≤—Å–µ —á—Ç–æ —Ö–æ—á–µ—à—å.
 
// const numbers = [5, 10, 15, 20, 25];

// const total = numbers.reduce((acc, number) => acc + number, 0);
// console.log(total);

// accumulator = 0 -> number = 5 -> return 0 + 5
// accumulator = 5 -> number = 10 -> return 5 + 10
// accumulator = 15 -> number = 15 -> return 15 + 15
// accumulator = 30 -> number = 20 -> return 30 + 20
// accumulator = 50 -> number = 25 -> return 50 + 25

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –∑–∞—Ä–ø–ª–∞—Ç—É
 */

// const salary = {
//   mango: 100,
//   poly: 50,
//   ajax: 150,
// };

// 1. –ß–µ—Ä–µ–∑ Object.values –≤—ã—Ç—è–≥–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π(–Ω–µ –∫–ª—é—á, –≤—Å–ø–æ–º–∏–Ω–∞–µ–º Object.keys - –ø–µ—Ä–µ–¥–∞—Å—Ç –Ω–∞–º –º–∞—Å—Å–∏–≤ –∏–∑
// [mango, poly, ajax]), a Object.values –ø–µ—Ä–µ–¥–∞—Å—Ç –º–∞—Å—Å–∏–≤ [100, 50, 150], —Å –∫–æ—Ç–æ—Ä—ã–º –∏ –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
// 2. –ù–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ(—Ç.–µ.–Ω–∞ –º–∞—Å—Å–∏–≤–µ) —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–∞ Object.values, –≤—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Ç–æ–¥ reduce —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
// –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–∞ (–º–æ–∂–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å –∏—Ö –∫–∞–∫ —É–≥–æ–¥–Ω–æ), –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å:

// const totalSalary = Object.values(salary).reduce(
//   (total, value) => total + value,
//   0,
// );
// console.log(totalSalary);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
 */

const players = [
  { id: 'player-1', name: 'Mango', timePlayed: 310, online: false },
  { id: 'player-2', name: 'Poly', timePlayed: 470, online: true },
  { id: 'player-3', name: 'Kiwi', timePlayed: 230, online: true },
  { id: 'player-4', name: 'Ajax', timePlayed: 150, online: false },
  { id: 'player-5', name: 'Chelsey', timePlayed: 80, online: true },
];

// const totalTimePlayed = players.reduce(
//   (totalTime, player) => totalTime + player.timePlayed,
//   0,
// );

// –ú–æ–∂–Ω–æ –ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ timePlayed? –û–±—ã—á–Ω–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É—é—Ç, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–µ—Å—Ç. –¥–≤–∞ 
// –∏ –±–æ–ª–µ–µ —Å–≤–æ–π—Å—Ç–≤. –ü–æ–ø—Ä–æ–±—É–µ–º:
const totalTimePlayed = players.reduce(
  (totalTime, {timePlayed}) => totalTime + timePlayed,
  0,
);

// –í–∞—É, –º–æ–∂–Ω–æ)

console.log(totalTimePlayed);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
 */
const cart = [
  { label: 'Apples', price: 100, quantity: 2 },
  { label: 'Bananas', price: 120, quantity: 3 },
  { label: 'Lemons', price: 70, quantity: 4 },
];

// –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —É–∂–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ–π—Å—Ç–≤–∞ price –∏ quantity, –¥–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –±—ã–ª–æ –±—ã cart.price –∏
// cart.quantity, —Ç.–µ. –≤–æ—Ç —Ç–∞–∫:
// const totalAmount = cart.reduce( (total, cart) => total + cart.price * cart.quantity, 0);

// const totalAmount = cart.reduce(
//   (total, { price, quantity }) => total + price * quantity,
//   0,
// );

// console.log(totalAmount);

/*
 * –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Ç–≤–∏—Ç–æ–≤
 */
const tweets = [
  { id: '000', likes: 5, tags: ['js', 'nodejs'] },
  { id: '001', likes: 2, tags: ['html', 'css'] },
  { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
  { id: '003', likes: 8, tags: ['css', 'react'] },
  { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
];

// –í —Ä–µ—à–µ–Ω–∏–∏ –Ω–∏–∂–µ, –Ω–∞—à –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞[], –∞ –Ω–µ —Å "0", —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –º—ã —ç—Ç–æ –Ω–∞—á–∞–ª—å–Ω–æ–µ
// –∑–Ω–∞—á–µ–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å, —Ç.–∫.—ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å—Å—ã–ª–∫–∞.

// const allTags = tweets.reduce((acc, tweet) => {
//   acc.push(tweet.tags);
//   return acc;
// }, []);

// –Ω–æ —á—Ç–æ–±—ã —Ä–∞–∑–≥–ª–∞–¥–∏—Ç—å —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤, —Ä–∞—Å–ø—ã–ª–∏–º –≤—Å–µ —Ç–µ–≥–≥–∏ –≤ –æ–¥–∏–Ω –æ–±—â–∏–π –º–∞—Å—Å–∏–≤:
// const allTags = tweets.reduce((acc, tweet) => {
//   acc.push(...tweet.tags);
//   return acc;
// }, []);

// –ö—Ä—É—á–µ –≤—Å–µ–≥–æ(—ç—Ç–æ –∫–æ–≥–¥–∞ –Ω–∞ —Ç–≤–æ–π –∫–æ–¥ –Ω–µ –±—É–¥—É—Ç —Ä—É–≥–∞—Ç—å—Å—è –ª–∏–Ω—Ç–µ—Ä—ã) –∑–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫, —á—Ç–æ —Ç—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
// –Ω–µ –±—É–¥–µ—à—å –º–µ–Ω—è—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä reduce, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—Ä–∏–º–µ—Ä–µ, –≥–¥–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏
// –Ω–∞—à –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä acc –º–µ–Ω–ª—Å—è —á–µ—Ä–µ–∑ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ acc.push(...tweet.tags).–ü—Ä–∞–≤–∏–ª—å–Ω–µ–µ —ç—Ç–æ –∑–∞–ø–∏—Å–∞—Ç—å, —Ç–∞–∫–∏–º
// –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ —Å–Ω–∞—á–∞–ª–∞ –º—ã —Ä–∞—Å–ø—ã–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä (–º–∞—Å—Å–∏–≤) "...acc", –∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏ 
// —Ä–∞—Å–ø—ã–ª—è–µ–º –≤ –Ω–µ–≥–æ "...tweet.tags"

const allTags = tweets.reduce((acc, tweet) => [...acc, ...tweet.tags], []);
console.log(allTags);

// –ü–æ-—à–∞–≥–æ–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
// –ò—Ç–µ—Ä–∞—Ü–∏—è 1: acc = [], tweet.tags = ['js', 'nodejs'] return [...[], ...['js', 'nodejs']]
// –ò—Ç–µ—Ä–∞—Ü–∏—è 2: acc = ['js', 'nodejs'] tweet.tags ['html', 'css']
// return  [...['js', 'nodejs'], ...['html', 'css']]
//  ['js', 'nodejs', 'html', 'css']
// –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–æ –∫–æ–Ω—Ü–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. [...acc, ...tweet.tags] - —ç—Ç–æ –∫–∞–∫ slice –∏ concat –≤–º–µ—Å—Ç–µ, —Ç–æ–ª—å–∫–æ –≤
// —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ

/*
 * –í–µ–¥—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤
 */

// –¢–µ–ø–µ—Ä—å –Ω—à–∞ –∑–∞–¥–∞—á–∫–∞ –≤–∑—è—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∫–∏ –∏ –æ–±—ä–¥–µ–Ω–∏—Ç—å –µ–≥–æ –≤ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç
// –ø–æ–¥—Å—á–∏—Ç–∞–Ω–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç–µ–≥–Ω—É–ª–∏ —Ç–æ—Ç –∏–ª–∏ –∏–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç.–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∏—Å—Ö–æ–¥–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –Ω–∞—à–µ–≥–æ
// –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ —É–∂–µ –±—É–¥–µ—Ç –Ω–µ –º–∞—Å—Å–∏–≤, –∞ –æ–±—ä–µ–∫—Ç { }, —Ç.–∫.–Ω–∞ –≤—ã—Ö–æ–¥–µ –º—ã –ø–æ–ª—É—á–∏–º –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –æ–±—ä–µ–∫—Ç–∞, —Ç–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç:
// {
//   node.js: 3,
//   js: 4,
//   html: 2,
//   react: 7
// }

// –£—Å–ª–æ–≤–∏–µ —Ç–∞–∫–æ–µ:
// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–ª—é—á–æ–º tag –µ—Å—Ç—å. —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1
// –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ—Å—Ç–≤–∞ –Ω–µ—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º —á—Ç–æ –≤ tag, —Å–¥–µ–ª–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å 1
// –í—ã—Ä–∞–∂–µ–Ω–∏–µ acc[tag] —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤—É

// –ü—Ä–æ–¥—É–±–ª–∏—Ä—É—é –º–∞—Å—Å–∏–≤ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏:
// const tweets = [
//   { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//   { id: '001', likes: 2, tags: ['html', 'css'] },
//   { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//   { id: '003', likes: 8, tags: ['css', 'react'] },
//   { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];

// const tagsStats = allTags.reduce((acc, tag) => {
//   console.log(acc);

// –õ–æ–≥–∏–∫–∞ —Ä–µ—à–µ–Ω–∏—è:
// –í —É—Å–ª–æ–≤–∏–∏ if (—Å—Ç—Ä.173-177) –Ω–∞ –ø–µ—Ä–≤–æ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –µ—Å—Ç—å –ª–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–µ(–∞ —ç—Ç–æ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç {})
// —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞(—ç—Ç–æ –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ —Å–º.—Å—Ç—Ä.161 —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–≥–∏['js', 'nodejs']).–ù–∞ –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ if
// —Å–∫–∞–∂–µ—Ç —á—Ç–æ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –Ω–µ true, –∞ false, –¥–ª—è false —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –∏–∑ —Å—Ç—Ä–æ–∫–∏ 180, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ
// –∑–∞–ø–∏—Å–∏(—ç–ª–µ–º–µ–Ω—Ç—ã) –≤ –æ–±—ä–µ–∫—Ç acc(–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä) –∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–ª–µ–¥—É—â–µ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏.–ï—Å–ª–∏ –Ω–∞
// –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∏—Ç—Ç–µ—Ä–∞—Ü–∏—è—Ö —Ç–∞–∫–æ–π —Ç–µ–≥ –æ–±–Ω–∞—Ä—É–∂–µ—Ç—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ, —Ç–æ —Å—Ç—Ä178 –¥–æ–±–∞–≤–∏—Ç –µ—â—ë –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ç–µ–≥,
// —Ç.–µ.–±—É–¥–µ—Ç 1 + 1 = 2 –∏ —Ç–∞–∫ —Å –∫–∞–∂–¥–æ–π –∏—Ç—Ä–∞—Ü–∏–µ–π.–ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –Ω–æ–≤—ã–π —Ç–µ–≥ –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â—ë –Ω–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ, —Ç–æ —Å—Ç—Ä–æ–∫–∞
// 185 –∫–æ–¥–∞ –¥–æ–±–∞–≤–∏—Ç –Ω–æ–≤—ã–π —Ç–µ–≥ –≤ –æ–±—ä–µ–∫—Ç –∏ —Ç–∞–∫ –¥–æ –∫–æ–Ω—Ü–∞ –ø–µ—Ä–µ–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

// if (acc[tag]) {
//     acc[tag] += 1;

//     return acc;
//   }

//   acc[tag] = 1;

//   return acc;
// }, {});

// –ü–µ—Ä–µ–ø–∏—à–µ–º –∏–º—É—Ç–∞–±–µ–ª—å–Ω–æ, —Ç–∞–∫ —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä—ã –Ω–µ –∫—Ä–∏—á–∞–ª–∏ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞:
// –∏–º—É—Ç–∞–±–µ–ª—å–Ω–æ - –∑–Ω–∞—á–∏—Ç –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç—Ç–µ—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
  
// const tagsStats = allTags.reduce((acc, tag) => {
  
//   if (acc[tag]) {
//     return {
//       ...acc,
//       [tag]: acc.tag + 1,
//     };
//   }
//   return {
//     ...acc,
//     [tag]: 1,
//   };
// }, {});


// –ê —Ç–µ–ø–µ—Ä—å –≤–æ–∑—å–º–µ–º –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–º —Ç–µ—Ä–Ω–∞—Ä–Ω–µ–∫–æ–º:

const tagsStats = allTags.reduce((acc, tag) => {
  return {
    ...acc,
    [tag]: acc[tag] ? acc[tag] + 1 : 1,
  };
}, {});
  
console.log(tagsStats);

