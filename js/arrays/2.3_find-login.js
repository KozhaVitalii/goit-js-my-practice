// Напиши скрипт поиска логина:
// - если логина нет, вывести сообщение "Пользователь [логин] не найден"
// - если нашли логин, вывести сообщение "Пользователь [логин] найден"

// Решить задачку несколькими способами:
// - через for
// - через for...of
// - используя логику break
// - методом includes() с тернарным оператором

// 1. Первый способ через for:
// Логика такая, в сообщении мы сразу пришем сообщение что пользователь не найден,
// если условие "иф" в цикле находит совпадение то "бреак" прерывает цикл и выводит
// сообщение что пользователь найден

const logins = ['m4ngoDoge', 'kiwidab3st', 'poly1scute', 'aj4xth3n4n'];
const loginToFind = 'poly1scute';
let message = `Пользователь ${loginToFind} не найден`;

// for (let i = 0; i <= logins.length; i += 1) {
//   const login = logins[i];
// console.log('Login :', login);
//   console.log(`Login : ${login} === ${loginToFind}: `, login === loginToFind);

//   if (login === loginToFind) {
//     message = `Пользователь ${loginToFind} найден`;
//     break;
//   }
// Дальше можно без else т.к. у нас есть бреак, который прерывает цикл и далее выполняется код после условия
// }
// console.log(message);

// 2. Решение через "for...of" + "break": Если мы посмотрим на предыдущий вариант решения, то там у нас много[i],
// мы по сути нигде не переобределяем значение переменной, у нас по сути задача сравнить, елементы
// массива с необходимым нам значением. Поэтому решаем через цикл "for...of":

// for (const login of logins) {
//   console.log('Login :', login);
//   console.log(`Login : ${login} === ${loginToFind}: `, login === loginToFind);

//     if (login === loginToFind) {
//       message = `Пользователь ${loginToFind} найден`;
//       break;
//     }
// }
// console.log(message);

// 3. Решим ту же задачу методом includes() с тернарным оператором
// Простое решение, которое заменяет цикл "for" и позволяет проверить, есть
// ли в массиве значение, оторое ищем.
//  что такое includes(); - это абстракция, метод, который у себя под капотом скрывает детали реализации,
// а именно данный метод перебирает значения в массиве сравнивая с условием и возвращает значение  true или false
// По сути проверяет есть ли в массиве примитивов необходимый нам примитив (подразумевается примитивный тип данных)

// !!! На выходе это самое лучшее и оптимальное решение:

// console.log(logins.includes(loginToFind));

// расширяем метод добавляя тернарный оператор:

const message1 = logins.includes(loginToFind)
  ? `Пользователь ${loginToFind} найден`
  : `Пользователь ${loginToFind} не найден`;
console.log(message1);
