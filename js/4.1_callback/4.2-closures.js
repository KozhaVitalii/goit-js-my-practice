/* –§–£–ù–ö–¶–ò–ò –ó–ê–ú–´–ö–ê–ù–ò–Ø
 * –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.
 *
 * –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø
 * –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º (–æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏)
 * —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Ç–æ–π –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –µ—ë –≤–µ—Ä–Ω—É–ª–∏),
 * —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–∑–∞–º—ã–∫–∞–Ω–∏–µ¬ª.
 */

// –ö—Ä–æ–º–µ —Ç–æ–≥–æ —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –≤–Ω—É—Ç—Ä—å —Å–µ–±—è –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é(–∫–æ–ª–±—ç–∫) –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç, –æ–Ω–∞ –µ—â—ë –º–æ–∂–µ—Ç
// –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–∑ —Å–µ–±—è –¥—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.

// –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä:

// const fnA = function (parameter) {
//     const innerVariable = '–∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ fnA';

//     const innerFunction = function () {
//         console.log(parameter);
//         console.log(innerVariable);
//         console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ innerFunction');
//     };

//     return innerFunction;
// };

// const fnB = fnA(555);

// –§—É–Ω–∫—Ü–∏—è fnB –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º) —Ñ—É–Ω–∫—Ü–∏–∏ fnA, —Ç.–µ. —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é fn–í
// –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º:

// const innerVariable
// const innerFunction
// –∏ –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—É (parameter) –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏–∑–≤–Ω–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é fnA

// fnB(); - —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã–∑–≤–∞–≤ —Ñ—É–Ω–∫—Ü–∏—é fnB() –º—ã –±—É–¥–µ–º –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É —á—Ç–æ –∏–º–µ–µ—Ç fn–ê()

// console.log(fnB); - –≤—ã–≤–µ–¥—è –≤ –∫–æ–Ω—Å–æ–ª—å –º—ã —É–≤–∏–¥–µ–º –≤—Å–µ —á—Ç–æ –µ—Å—Ç—å –≤ fn–ê()

/*
 * –ü–æ–≤–∞—Ä—ë–Ω–æ–∫
 */
// const makeDish = function (sheffName, dish) {
//     console.log(`${sheffName} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
// };

// makeDish('Mango', '–ø–∏—Ä–æ–∂–æ–∫');
// makeDish('Mango', '–æ–º–ª–µ—Ç');
// makeDish('Mango', '—á–∞–π');

// makeDish('Poly', '–∫–æ—Ç–ª–µ—Ç—ã');
// makeDish('Poly', '—Å—É–ø–∏–∫');
// makeDish('Poly', '–∫–æ—Ñ–µ');

// –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥ –Ω–∞–º –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–º—è —à–µ—Ñ - –ø–æ–≤–∞—Ä–∞ –∏ –±–ª—é–¥–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –≥–æ—Ç–æ–≤–∏—Ç.
// –ü–æ–ª—É—á–∞–µ—Ç—Å—è —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–º—è —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞. –ß—Ç–æ–±—ã —ç—Ç–æ –∏—Å–∫–ª—é—á–∏—Ç—å –º—ã –º–æ–∂–µ–º:

// 1. –û–±—ä—è–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é —Å–¥–µ–ª–∞–π —à–µ—Ñ–∞ –∏ –±—É–¥–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –Ω–µ—ë –∏–º—è —à–µ—Ñ–∞.–ê –≤–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –±—É–¥–µ–º
// –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–æ–≥–æ–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ. –í function (name) –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –∏–º—è —ç—Ç–æ–≥–æ —à–µ—Ñ–∞. –ê —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏
// const makeSheff –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ const makeDish, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø 
// –∫ –∏–º–µ–Ω–∏ —à–µ—Ñ–∞ –≤ function (name) 

const makeSheff = function (name) {
    // const innverVar = 555;
    // const message = 'hello';

    const makeDish = function (dish) {
        // console.log(message);
        // console.log(innverVar);
        console.log(`${name} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
    };

    return makeDish;
};

// –í –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é const mango –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —à–µ—Ñ–∞ 'Mango', –Ω–æ –≤ makeSheff —É–∂–µ –ª–µ–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è makeDish
const mango = makeSheff('Mango');

// –ü–æ - —à–∞–≥–æ–≤–æ:
// 1. –ú—ã –≤–∑–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é makeSheff –Ω–∞ 77 —Å—Ç—Ä–æ–∫–µ
// 2. –ú–∞–Ω–≥–æ –∑–∞–ø–∏—Å–∞–ª—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä(name) –Ω–∞ 63 —Å—Ç–æ—Ä—á–∫–µ
// 3. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ makeSheff –º—ã –≤–µ—Ä–Ω—É–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é makeDish(–Ω–∞ 67 —Å—Ç—Ä–æ—á–∫–µ) –∫–∞–∫ –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
// return makeDish(—Å—Ç—Ä. 73)
// 4. –í –∏—Ç–æ–≥–µ –≤ const mango –ª–µ–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è const makeDish
// –ò –µ—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é const makeDish, —Ç–æ –æ–Ω–∞ –≤—Å–µ –µ—â—ë –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—É (name) –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è.

console.dir(mango);

// mango('–∫–æ—Ç–ª–µ—Ç—ã'); - –º–∞–Ω–≥–æ - —ç—Ç–æ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è makeSheff('Mango'), –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞
// —Ñ—É–Ω–∫—Ü–∏—é makeDish –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞ –º–µ—Å—Ç–æ function (dish) –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç ('–∫–æ—Ç–ª–µ—Ç—ã')
// mango('–ø–∏—Ä–æ–∂–æ–∫');

// –î–ª—è –µ—â–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ –≤–æ–∑—å–º–µ–º –¥—Ä—É–≥–æ–µ –∏–º —à–µ—Ñ–∞ 'Poly'
// const poly = makeSheff('Poly');
// console.dir(poly);
// poly('—á–∞–π');
// poly('–æ–º–ª–µ—Ç');
// console.dir(mango);

/*
 * –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
 */

// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder = function (number, places) {
//     return Number(number.toFixed(places));
// };

// console.log(rounder(3.4567, 2));
// console.log(rounder(3.4567, 3));
// console.log(rounder(5.1234, 2));
// console.log(rounder(3.4567, 3));

const rounder = function (places) {
    return function (number) {
        return Number(number.toFixed(places));
    };
};

// const rounder2 = rounder(2);
// const rounder3 = rounder(3);

// console.dir(rounder2);
// console.dir(rounder3);

// console.log(rounder2(3.4567));
// console.log(rounder2(5.4512312312367));
// console.log(rounder3(3.4567));
// console.log(rounder2(5.1234));
// console.log(rounder3(3.4567));
// console.log(rounder3(10.67667));

/*
 * –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - —Å–∫—Ä—ã—Ç–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

const salaryManagerFactory = function (employeeName, baseSalary = 0) {
    let salary = baseSalary;

    return {
        raise(amount) {
            if (amount > 1000) {
                return '–¢—ã –æ—Ñ–∏–≥–µ–ª?';
            }

            salary += amount;
        },
        lower(amount) {
            salary -= amount;
        },
        current() {
            return `–¢–µ–∫—É—â–∞—è –∑–∞—Ä–ø–∞–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
        },
    };
};

const salaryManager = salaryManagerFactory('Mango', 5000);

console.log(salaryManager.current());

console.log(salaryManager.raise(10000000));

console.log(salaryManager.current());

// const myLibFactory = function () {
//     let value = 0;

//     const add = function (num) {
//         value += num;
//     };

//     return {
//         add: add,
//         getValue() {
//             return value;
//         },
//     };
// };

// const myLib = myLibFactory();

// console.dir(myLib.getValue);

// console.log(myLib);
// console.log(myLib.getValue());
// myLib.add(10);
// console.log(myLib.getValue());