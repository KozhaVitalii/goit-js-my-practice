// Приведение к булю на примере Boolean(value);
// В численном приобразовании через Number, null и false приводятся к "0"

// console.log(Boolean(5));
// console.log(Boolean(0));

// Есть правило, когда мы работаем с логическим преобразованием к булю.
// Запам'ятайте 6 хибних (falsy) значень, що приводяться до false у логічному
// перетворенні: 0, NaN, null, undefined, порожній рядок і false.Абсолютно все інше приводиться до true.

// Логическое И(операторы &&)
// Запинается на лжи и возвращает, то на чём запнулось или последний операнд

// console.log(5 && 6 && 8 && 'Hello');
// console.log(0 && 'Hello');

// Логика такая, оператор сравнивает операнды и если каждое из них true, то выводится последнее значение,
// но задача оператора "И" найти значение равное false и как только он его находит сравнение запинается
// и выводится значение, которое равно false
// Т.е.чтобы всё выражение выполнилось, необходимо, чтобы значение всех операндов не было равно после
// преобразования = false(т.е.не равно одному из этих значений: 0, NaN, null, undefined, порожній рядок і false)

// Логическое ИЛИ(операторы ||)
// Запинается на правде и возвращает то на чём запнулось или последний операнд
// т.е. если хотя бы одно условие выполняется, т.е. true, то условие выполняется

// console.log( false || 0 || 5 || 6);

// Первые два значения равны false, поэтому правда(т.е.true) будет на 3 - м значении и выведет "5".
// Если все значения будут равны false, то выведется последнее неверное значение


// Логическое НЕ(оператор!)
// Делает инверсию правда > ложь и ложь > правда

// К примеру, если я хочу из false сделать true, то вначале я указываю "!" и наоборот 
console.log(!0);
// console.log(!NaN);
// console.log(!null);
// console.log(!undefined);
// console.log(!false);
console.log(!25);