/*
 * –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
 *  - extends
 *  - super()
 */

// –ö–ª–∞—Å—Å –∏ —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ç—Ç–æ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ.

// –ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º —á—Ç–æ–±—ã –∫–ª–∞—Å—Å —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–ª —Å–≤–æ–π—Å—Ç–≤–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞(–∫ –ø—Ä–∏–º–µ—Ä—É class "Warrior", –¥–æ–ª–∂–µ–Ω
// —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –æ—Ç —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞(—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ class "Hero" –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞) –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º
// extends, –≤–æ—Ç —Ç–∞–∫:
    
// class Warrior extends Hero {
//         constructor(){}
//     }

// –ì–¥–µ Warrior –±—É–¥–µ—Ç —è–≤–ª—è—Ç—å—Å—è –∫–ª–∞—Å—Å–æ–º —Ä–µ–±–µ–Ω–∫–æ–º, –∞ Hero —è–≤–ª—è–µ—Ç—Å—è –∫–ª–∞—Å—Å–æ–º —Ä–æ–¥–∏—Ç–µ–ª—å

// –ï—Å–ª–∏ –º—ã –ø—Ä–∏ —Ç–∞–∫–æ–π –∑–∞–ø–∏—Å–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π(—ç–∫–∑–µ–º–ø–ª—è—Ä–∞) —Å–æ—à–ª–µ–º—Å—è –Ω–∞ –∫–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞:
// const mango = new Warrior({ name: 'mango', xp: 1000 }), —Ç–æ —É –Ω–∞—Å –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–æ
// —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—ä—è–≤–∏—Ç—å super constructor. –ß—Ç–æ–±—ã —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∫–ª–∞—Å—Å–∞
// —Ä–µ–±–µ–Ω–∫–∞ –≤—ã–∑–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ —Ä–æ–¥–∏—Ç–µ–ª—è —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –∏ –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∑–≤–∞—Ç—å super:

// class Warrior extends Hero {
//     constructor() {
//         super();
//         }
// }
    
// –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? –í—ã–∑–æ–≤ super(); —ç—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—è —Ç.–µ. —Å—Ç—Ä–æ–∫ 20-23:

// class Hero {
//     constructor({ name = 'hero', xp = 0 } = {}) {
//         this.name = name;
//         this.xp = xp;
//     }

//     gainXp(amount) {
//         console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç ${amount} –æ–ø—ã—Ç–∞`);
//         this.xp += amount;
//     }
// }

// class Warrior extends Hero {
//     constructor(config) {
//         super(config);
//         }
// }

// const mango = new Warrior({ name: 'mango', xp: 1000 });
// console.log(mango)

// –ö–∞–∫–∞—è —Ü–µ–ø–æ—á–∫–∞: –£ const mango –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è Warrior({ name: 'mango', xp: 1000 }); –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ
// –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Warrior(—Å—Ç—Ä–æ–∫–∏ 45 - 47) –∫—É–¥–∞ –Ω–∞ –º–µ—Å—Ç–æ config (—Å—Ç—Ä 45) –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è
// –∞—Ä–≥—É–º–µ–Ω—Ç—ã: { name: 'mango', xp: 1000 }, –¥–∞–ª–µ–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è super(config); (—Å—Ç—Ä46), —á—Ç–æ –µ—Å—Ç—å –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏
// –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—è(—Å—Ç—Ä.33 - 36) –∏ –¥–∞–ª–µ–µ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ—Ç super(config) –≤
// constructor({ name = 'hero', xp = 0 } = {}) –Ω–∞ —Å—Ç—Ä–æ–∫–µ 33 –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è this.name = name; –∏ this.xp = xp;
// –Ω–∞ 34-35 —Å—Ç—Ä–æ–∫–∞—Ö.

// –£–ø—Ä–æ—â–µ–Ω–Ω–æ –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞ –∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫:

class Hero {
    constructor(name = 'hero', xp = 0 ) {
        this.name = name;
        this.xp = xp;
    }

    gainXp(amount) {
        console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç ${amount} –æ–ø—ã—Ç–∞`);
        this.xp += amount;
    }
}

class Warrior extends Hero {
    constructor(name, xp) {
        super(name, xp);
        }
}

const mango = new Warrior('mango', 1000);
console.log(mango)

// –ò —Ç–µ–ø–µ—Ä—å –¥–æ–æ–±–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ weapon:

class Hero {
    constructor(name = 'hero', xp = 0 ) {
        this.name = name;
        this.xp = xp;
    }

    gainXp(amount) {
        console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç ${amount} –æ–ø—ã—Ç–∞`);
        this.xp += amount;
    }
}

class Warrior extends Hero {
    constructor(name, xp, weapon) {
        super(name, xp);
        this.weapon = weapon; // –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–æ–≤ –Ω–µ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ (—Ç.–∫. –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ –µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ä–µ–¥–∏ –±–∞–∑–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤)    
    }
}

const mango = new Warrior('mango', 1000, '–∞–ª–µ–±–∞—Ä–¥–∞');
console.log(mango)

mango.gainXp(1000); // –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ xp —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ç–µ–ª–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ
// –∫–ª–∞—Å—Å–∞

// –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?
    
// console.log(mango.__proto__ === Warrior.prototype); // –æ—Ç—Å—é–¥–∞ –≤–∏–¥–∏–º —á—Ç–æ —ç—Ç–∏ —Å–≤–æ–π—Å—Ç–≤–∞ —Ä–∞–≤–Ω—ã
// console.log('Warrior.prototype', Warrior.prototype); // –í Warrior.prototype –ª–µ–∂–∏—Ç –ø—É—Å—Ç–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –Ω–æ
// // –≤ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–µ __proto__ –ª–µ–∂–∏—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ Hero.prototype:
// console.log(Warrior.prototype.__proto__ === Hero.prototype); // –∞ —É–∂–µ –≤ –Ω–µ–º –ª–µ–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è gainXp(amount)

// –û–ø–∏—à–µ–º —Ü–µ–ø–æ—á–∫—É:
// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ new Warrior('mango', 1000, '–∞–ª–µ–±–∞—Ä–¥–∞') —Å—Ç—Ä–æ–∫–∞ 104, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—É—Å—Ç–æ–π 
// –æ–±—ä–µ–∫—Ç const mango, –¥–∞–ª–µ–µ –∏–∑ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ __proto__ –∫–ª–∞–¥–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Warrior.prototype, –∞ Warrior.prototype
// —è–≤–ª—è–µ—Ç—Å—è —Ç–æ–∂–µ –æ–±—ä–µ–∫—Ç–æ–º —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç–æ–∂–µ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ __proto__ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç 
// Hero.prototype –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –ª–µ–∂–∏—Ç –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä gainXp 
// –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 1: 1 –æ–±—ä–µ–∫—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤(–∫ 
// –ø—Ä–∏–º–µ—Ä—É —Ä–µ–±–µ–Ω–∫–∞ –∏ —Ä–æ–¥–∏—Ç–µ–ª—è)



class Hero {
    constructor({ name = 'hero', xp = 0 } = {}) {
        this.name = name;
        this.xp = xp;
    }

    gainXp(amount) {
        console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç ${amount} –æ–ø—ã—Ç–∞`);
        this.xp += amount;
    }
}

// –ó–∞–ø–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤: constructor({ weapon, ...restProps } - –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ weapon, –≤—Å–µ
// –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ª–µ–∂–∏—Ç –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ, –ø–æ—ç—Ç–æ–º—É —Å–æ–±–µ—Ä–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ rest –≤ ...restProps, –ø–µ—Ä–µ–¥–∞–µ–º –Ω–∞
// —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ –≤ super(restProps); –∏ –≤ —ç—Ç–æ restProps —Å–æ–±–∏—Ä–∞—é—Ç—Å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –ª–µ–∂–∞—Ç –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ –≤—ã—à–µ.
// –†–µ–∞–ª—å–Ω—ã–π –∫–µ–π—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è rest

class Warrior extends Hero {
    constructor({ weapon, ...restProps } = {}) {
        super(restProps);

        this.weapon = weapon;
    }

    attack() {
        console.log(`${this.name} –∞—Ç–∞–∫—É–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è ${this.weapon}`);
    }
}

class Berserk extends Warrior {
    constructor({ warcry, ...restProps } = {}) {
        super(restProps);

        this.warcry = warcry;
    }

    babyRage() {
        console.log(this.warcry);
    }
}

const ajax = new Berserk({
    name: 'ajax',
    xp: 500,
    weapon: 'axe',
    warcry: 'waaaaaaaah',
});

// console.log(ajax);

// ajax.babyRage();
// ajax.attack();
// ajax.gainXp();

class Mage extends Hero {
    constructor({ spells, ...restProps } = {}) {
        super(restProps);

        this.spells = spells;
    }

    cast() {
        console.log(`${this.name} —á—Ç–æ-—Ç–æ —Ç–∞–º –∫–∞—Å—Ç—É–µ—Ç üßô‚Äç‚ôÇÔ∏è`);
    }
}

// const mango = new Warrior({ name: 'mango', xp: 1000, weapon: '–∞–ª–µ–±–∞—Ä–¥–∞' });
// console.log(mango);
// mango.attack();
// mango.gainXp(1000);

// const poly = new Mage({ name: 'poly', xp: 500, spells: ['—Ñ–∞–µ—Ä–±–æ–ª'] });
// console.log(poly);
// poly.cast();
// poly.gainXp(200);

// console.log(
//     'mango.__proto__ === Warrior.prototype ',
//     mango.__proto__ === Warrior.prototype,
// );
// // console.log(Object.getPrototypeOf(mango) === Warrior.prototype);

// console.log(
//     'Warrior.prototype.__proto__ === Hero.prototype ',
//     Warrior.prototype.__proto__ === Hero.prototype,
// );

// console.log(
//     'Hero.prototype.__proto__ === Object.prototype ',
//     Hero.prototype.__proto__ === Object.prototype,
// );